<Window x:Class="UWUVCI_AIO_WPF.UI.Windows.N64ConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="N64 VC INI Editor"
        Height="720" Width="1125"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Background="#FFF9F9F9">

    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="MinWidth" Value="110"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Background" Value="#2196F3"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#42A5F5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1E88E5"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#CCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
        </Style>
    </Window.Resources>

    <Border CornerRadius="6" Background="White" Margin="12" Padding="12" BorderBrush="#2196F3" BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <DockPanel Grid.Row="0" LastChildFill="False" Margin="0,0,0,10" VerticalAlignment="Center">
                <TextBlock Text="ðŸŽ® N64 VC INI Editor" FontSize="22" FontWeight="Bold" VerticalAlignment="Center"/>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Center">
                    <CheckBox x:Name="AdvancedToggle" Content="Enable Advanced Controls" VerticalAlignment="Center" Margin="10,0,0,0" Checked="AdvancedToggle_Changed" Unchecked="AdvancedToggle_Changed"/>
                </StackPanel>
            </DockPanel>

            <!-- Command Bar -->
            <DockPanel Grid.Row="1" LastChildFill="False" Margin="0,2,0,8" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="BtnOpen" Content="Openâ€¦" Click="BtnOpen_Click"/>
                    <Button x:Name="BtnSave" Content="Save" Click="BtnSave_Click"/>
                    <Button x:Name="BtnSaveAs" Content="Save Asâ€¦" Click="BtnSaveAs_Click"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Center"><TextBlock Text="Preset:" VerticalAlignment="Center" Margin="8,0,6,0"/><ComboBox x:Name="PresetQuickBox" Width="260" VerticalAlignment="Center" SelectionChanged="PresetQuickBox_SelectionChanged" ToolTip="Choose a preset. Description shows when selected."/><CheckBox x:Name="ChkQuickMerge" Content="Merge" VerticalAlignment="Center" Margin="6,0,0,0" ToolTip="On: overwrite only preset keys; keep other values. Off: replace everything with the preset."/>
                </StackPanel>
            </DockPanel>

            <!-- Main -->
            <TabControl Grid.Row="2" x:Name="Tabs" Margin="0,4,0,0">
                <TabItem Header="RomOption">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="8">
                            <TextBlock Text="Common options" FontWeight="Bold" Margin="0,0,0,6"/>
                            <WrapPanel>
                                <CheckBox x:Name="ChkRetraceByVsync" Content="RetraceByVsync" Margin="0,0,16,8" IsThreeState="True"/>
                                <CheckBox x:Name="ChkUseTimer" Content="UseTimer" Margin="0,0,16,8" IsThreeState="True"/>
                                <CheckBox x:Name="ChkTrueBoot" Content="TrueBoot" Margin="0,0,16,8" IsThreeState="True"/>
                                <CheckBox x:Name="ChkRumble" Content="Rumble" Margin="0,0,16,8" IsThreeState="True" Checked="RumbleMemPak_Changed" Unchecked="RumbleMemPak_Changed"/>
                                <CheckBox x:Name="ChkMemPak" Content="MemPak" Margin="0,0,16,8" IsThreeState="True" Checked="RumbleMemPak_Changed" Unchecked="RumbleMemPak_Changed"/>
                            </WrapPanel>
                            <Grid Margin="0,6,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="180"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="BackupType"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="BackupTypeBox" Width="220">
                                    <ComboBoxItem Content="[null]"/>
                                    <ComboBoxItem Content="0 - Auto"/>
                                    <ComboBoxItem Content="1 - SRAM"/>
                                    <ComboBoxItem Content="2 - Flash"/>
                                    <ComboBoxItem Content="3 - EEPROM"/>
                                </ComboBox>
                                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="BackupSize"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="BackupSizeBox" Width="220">
                                    <ComboBoxItem Content="[null]"/>
                                    <ComboBoxItem Content="512"/>
                                    <ComboBoxItem Content="2048"/>
                                    <ComboBoxItem Content="4K"/>
                                    <ComboBoxItem Content="16K"/>
                                </ComboBox>
                                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="RamSize (hex)"/>
                                <TextBox Grid.Row="2" Grid.Column="1" x:Name="RamSizeBox" Width="220"/>
                            </Grid>
                            <Separator Margin="0,10,0,10"/>
                            <TextBlock Text="All RomOption fields" FontWeight="Bold"/>
                            <StackPanel x:Name="RomOptionAutoPanel"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="Render">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="8">
                            <TextBlock Text="Render settings" FontWeight="Bold"/>
                            <StackPanel x:Name="RenderAutoPanel"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="Sound">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="8">
                            <TextBlock Text="Sound settings" FontWeight="Bold"/>
                            <StackPanel x:Name="SoundAutoPanel"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="Input">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="8">
                            <TextBlock Text="Input settings" FontWeight="Bold"/>
                            <StackPanel x:Name="InputAutoPanel"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="RSPG">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="8">
                            <TextBlock Text="RSPG settings" FontWeight="Bold"/>
                            <StackPanel x:Name="RSPGAutoPanel"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="SI/VI/Cmp">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="8">
                            <TextBlock Text="Cmp" FontWeight="Bold"/>
                            <StackPanel x:Name="CmpAutoPanel"/>
                            <Separator Margin="0,10,0,10"/>
                            <TextBlock Text="SI" FontWeight="Bold"/>
                            <StackPanel x:Name="SIAutoPanel"/>
                            <Separator Margin="0,10,0,10"/>
                            <TextBlock Text="VI" FontWeight="Bold"/>
                            <StackPanel x:Name="VIAutoPanel"/>
                            <Separator Margin="0,10,0,10"/>
                            <TextBlock Text="TempConfig" FontWeight="Bold"/>
                            <StackPanel x:Name="TempConfigAutoPanel"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="Hacks">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="8" x:Name="HacksPanel">
                            <TextBlock Text="Indexed hack sections (Idle, InsertIdleInst, SpecialInst, BreakBlockInst, FilterHack, Cheat)"/>
                            <DataGrid x:Name="GridIdle" Margin="0,8,0,0" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="140">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                    <DataGridTextColumn Header="Address (hex)" Binding="{Binding Address}"/>
                                    <DataGridTextColumn Header="Inst (hex)" Binding="{Binding Inst}"/>
                                    <DataGridTextColumn Header="Type (dec)" Binding="{Binding Type}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <DataGrid x:Name="GridInsertIdleInst" Margin="0,8,0,0" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="160">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                    <DataGridTextColumn Header="Address (hex)" Binding="{Binding Address}"/>
                                    <DataGridTextColumn Header="Inst (hex)" Binding="{Binding Inst}"/>
                                    <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <DataGrid x:Name="GridSpecialInst" Margin="0,8,0,0" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="160">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                    <DataGridTextColumn Header="Address (hex)" Binding="{Binding Address}"/>
                                    <DataGridTextColumn Header="Inst (hex)" Binding="{Binding Inst}"/>
                                    <DataGridTextColumn Header="Type (dec)" Binding="{Binding Type}"/>
                                    <DataGridTextColumn Header="Value (hex)" Binding="{Binding Value}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <DataGrid x:Name="GridBreakBlockInst" Margin="0,8,0,0" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="160">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                    <DataGridTextColumn Header="Address (hex)" Binding="{Binding Address}"/>
                                    <DataGridTextColumn Header="Inst (hex)" Binding="{Binding Inst}"/>
                                    <DataGridTextColumn Header="Type (dec)" Binding="{Binding Type}"/>
                                    <DataGridTextColumn Header="JmpPC (hex)" Binding="{Binding JmpPC}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <DataGrid x:Name="GridFilterHack" Margin="0,8,0,0" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="180">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                    <DataGridTextColumn Header="TextureAddress (hex)" Binding="{Binding TextureAddress}"/>
                                    <DataGridTextColumn Header="SumPixel (hex)" Binding="{Binding SumPixel}"/>
                                    <DataGridTextColumn Header="Data2 (hex)" Binding="{Binding Data2}"/>
                                    <DataGridTextColumn Header="Data3 (hex)" Binding="{Binding Data3}"/>
                                    <DataGridTextColumn Header="AlphaTest (dec)" Binding="{Binding AlphaTest}"/>
                                    <DataGridTextColumn Header="MagFilter (dec)" Binding="{Binding MagFilter}"/>
                                    <DataGridTextColumn Header="OffsetS (hex)" Binding="{Binding OffsetS}"/>
                                    <DataGridTextColumn Header="OffsetT (hex)" Binding="{Binding OffsetT}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <DataGrid x:Name="GridCheat" Margin="0,8,0,0" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="160">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                    <DataGridTextColumn Header="N (dec)" Binding="{Binding N}"/>
                                    <DataGridTextColumn Header="Addr (hex)" Binding="{Binding Addr}"/>
                                    <DataGridTextColumn Header="Value (hex/dec)" Binding="{Binding Value}"/>
                                    <DataGridTextColumn Header="Bytes (dec)" Binding="{Binding Bytes}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Border Background="#FFF4F6F8" BorderBrush="#FFD0D7DE" BorderThickness="1" CornerRadius="6" Padding="8" Margin="0,8,0,0">
                                <StackPanel>
                                    <TextBlock Text="RomHack and VertexHack are available when Advanced Controls are enabled."/>
                                    <StackPanel x:Name="AdvancedHacksPanel" Visibility="Collapsed" Margin="0,8,0,0">
                                        <TextBlock Text="RomHack" FontWeight="Bold"/>
                                        <DataGrid x:Name="GridRomHack" Margin="0,4,0,8" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="180">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                                <DataGridTextColumn Header="Address (hex)" Binding="{Binding Address}"/>
                                                <DataGridTextColumn Header="Type (dec)" Binding="{Binding Type}"/>
                                                <DataGridTextColumn Header="Value (byte array)" Binding="{Binding Value}" Width="*"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <TextBlock Text="VertexHack" FontWeight="Bold"/>
                                        <DataGrid x:Name="GridVertexHack" Margin="0,4,0,0" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Height="200">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Index" Binding="{Binding Index}" Width="60"/>
                                                <DataGridTextColumn Header="VertexCount (dec)" Binding="{Binding VertexCount}"/>
                                                <DataGridTextColumn Header="VertexAddress (hex)" Binding="{Binding VertexAddress}"/>
                                                <DataGridTextColumn Header="TextureAddress (hex)" Binding="{Binding TextureAddress}"/>
                                                <DataGridTextColumn Header="FirstVertex (byte array)" Binding="{Binding FirstVertex}" Width="*"/>
                                                <DataGridTextColumn Header="Value (byte array)" Binding="{Binding Value}" Width="*"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,6,0,0">
                                            <Button Content="Edit RomHack Valueâ€¦" Click="EditRomHackValue_Click"/>
                                            <Button Content="Edit VertexHack FirstVertexâ€¦" Margin="8,0,0,0" Click="EditVertexFirst_Click"/>
                                            <Button Content="Edit VertexHack Valueâ€¦" Margin="8,0,0,0" Click="EditVertexValue_Click"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>

                <TabItem Header="Advanced" x:Name="AdvancedTab" Visibility="Collapsed">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="RawGrid" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" Margin="8">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Section" Binding="{Binding Section}" Width="200"/>
                                <DataGridTextColumn Header="Key" Binding="{Binding Key}" Width="200"/>
                                <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <DockPanel Grid.Row="1" Margin="8" LastChildFill="False">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Foreground="Gray" VerticalAlignment="Center" Text="Advanced: edit any raw INI line."/>
                                <TextBlock Foreground="Gray" VerticalAlignment="Center" Text="  Filter:" Margin="12,0,4,0"/>
                                <TextBox x:Name="RawFilterBox" Width="220" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DockPanel>
                    </Grid>
                </TabItem>
            </TabControl>

            <!-- Footer -->
            <DockPanel Grid.Row="3" LastChildFill="False" Margin="0,8,0,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="StatusText" Foreground="Gray" VerticalAlignment="Center"/>
                    <TextBlock x:Name="PresetBadge" Foreground="#666" Margin="12,0,0,0" VerticalAlignment="Center"/>
                </StackPanel>
                <Button DockPanel.Dock="Right" Content="Close" Background="#757575" Click="BtnClose_OnClick"/>
            </DockPanel>
        </Grid>
    </Border>
</Window>

